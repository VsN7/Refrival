/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.refrival.view;

import br.com.refrival.controller.OrcamentoController;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;

/**
 *
 * @author Vitor
 */
public class OrcamentoView extends javax.swing.JInternalFrame {

    
    OrcamentoController oc;
    private int id;
    private String cliente;
    private String cpf;
    private String servico;
    private String item;
    private String dataInicio;
    private String previsaoEntrega;
    private double valor;
    private String observacoes;
    private SimpleDateFormat sdf;
    private String situacao;
    private static int index=0;
    public OrcamentoView() throws Exception {
        sdf = new SimpleDateFormat("dd/MM/yyyy");
        oc = new OrcamentoController();
        initComponents();
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        int lar = (int) d.getWidth();
        int alt = (int) d.getHeight();
        this.setLocation((lar - this.getSize().width) / 2, (alt - this.getSize().height)/4);
        inputId.setEnabled(false);
        
        if(oc.primeiroPasso() == 0){
            this.desativarAll();
            this.inputSituacao.setEnabled(false);
            this.desativarBotoesC();
        }else{
            exibirDados(); 
        }
        
    }
    
    public void iniciarValores(){
        try{
            this.valor = 0;
            this.cliente = null;
            this.servico = null;
            this.dataInicio = null;
            this.previsaoEntrega = null;
            this.item = null;
            this.observacoes = null;
            this.cpf = null;
            this.valor = Double.parseDouble(inputValor.getText());
            this.cliente = inputCliente.getText();
            this.cpf = inputCpf.getText();
            this.servico = inputServico.getText();
            this.item = inputItem.getText();
            this.dataInicio = inputDataInicio.getText();
            this.previsaoEntrega = inputPrevisaoEntrega.getText();
            this.observacoes = inputObservacoes.getText();
            if(this.cliente.equals("")||this.servico.equals("")){
                this.dataInicio=null;
            }
        }catch(Exception e){
            
                
        }
        
    }
    public OrcamentoController getOc() {
        return this.oc;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        inputCliente = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        inputId = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        inputServico = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        inputItem = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        inputDataInicio = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter dataInicio= new javax.swing.text.MaskFormatter("##/##/####");
            inputDataInicio = new javax.swing.JFormattedTextField(dataInicio);
        }
        catch (Exception e){
        }
        jLabel15 = new javax.swing.JLabel();
        inputPrevisaoEntrega = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter previsaoEntrega= new javax.swing.text.MaskFormatter("##/##/####");
            inputPrevisaoEntrega = new javax.swing.JFormattedTextField(previsaoEntrega);
        }
        catch (Exception e){
        }
        jLabel16 = new javax.swing.JLabel();
        inputValor = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        buttonCadastrar = new javax.swing.JButton();
        buttonSelecionar = new javax.swing.JButton();
        buttonExcluir = new javax.swing.JButton();
        buttonEditar = new javax.swing.JButton();
        buttonInicio = new javax.swing.JButton();
        buttonAnterior = new javax.swing.JButton();
        buttonProximo = new javax.swing.JButton();
        buttonFinal = new javax.swing.JButton();
        buttonImprimir = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        inputObservacoes = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter dataInicio= new javax.swing.text.MaskFormatter("##/##/####");
            inputDataInicio = new javax.swing.JFormattedTextField(dataInicio);
        }
        catch (Exception e){
        }
        ImageIcon iconOrcamento = new ImageIcon(getClass().getResource("/icon/calendario.jpg")); Image imagem = iconOrcamento.getImage();
        jLabel3 = new javax.swing.JLabel(){
            public void paintComponent(Graphics g){
                g.drawImage(imagem,0,0,getWidth(),getHeight(),this);
            }
        };
        ImageIcon iconOrcamento2 = new ImageIcon(getClass().getResource("/icon/calendario.jpg")); Image imagem2 = iconOrcamento2.getImage();
        jLabel5 = new javax.swing.JLabel(){
            public void paintComponent(Graphics g){
                g.drawImage(imagem,0,0,getWidth(),getHeight(),this);
            }
        };
        inputSituacao = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        buttonFinalizar = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        inputCpf = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter cpfFormat= new javax.swing.text.MaskFormatter("###.###.###-##");
            inputCpf = new javax.swing.JFormattedTextField(cpfFormat);
        }
        catch (Exception e){
        }

        setClosable(true);
        setIconifiable(true);

        jLabel9.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Orçamento Prévio");

        jLabel10.setText("Cliente");

        inputCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTituloActionPerformed(evt);
            }
        });

        jLabel11.setText("ID");

        inputId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTitulo1ActionPerformed(evt);
            }
        });

        jLabel12.setText("Serviço");

        inputServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTitulo3ActionPerformed(evt);
            }
        });

        jLabel13.setText("Item");

        inputItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTitulo4ActionPerformed(evt);
            }
        });

        jLabel14.setText("Data Inicio");

        inputDataInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTitulo5ActionPerformed(evt);
            }
        });

        jLabel15.setText("Previsão de Entrega");

        inputPrevisaoEntrega.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTitulo6ActionPerformed(evt);
            }
        });

        jLabel16.setText("Valor");

        inputValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTitulo7ActionPerformed(evt);
            }
        });

        buttonCadastrar.setText("Novo");
        buttonCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCadastrarActionPerformed(evt);
            }
        });

        buttonSelecionar.setText("Selecionar");
        buttonSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSelecionarActionPerformed(evt);
            }
        });

        buttonExcluir.setText("Excluir");
        buttonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExcluirActionPerformed(evt);
            }
        });

        buttonEditar.setText("Editar");
        buttonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditarActionPerformed(evt);
            }
        });

        buttonInicio.setText("|<");
        buttonInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        buttonAnterior.setText("<<");
        buttonAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        buttonProximo.setText(">>");
        buttonProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        buttonFinal.setText(">|");
        buttonFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        buttonImprimir.setText("Imprimir");
        buttonImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonImprimirActionPerformed(evt);
            }
        });

        jLabel17.setText("Observações");

        inputObservacoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputObservacoesinputTitulo5ActionPerformed(evt);
            }
        });

        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel3MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel3MousePressed(evt);
            }
        });

        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel5MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel5MousePressed(evt);
            }
        });

        inputSituacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputSituacaoinputTitulo1ActionPerformed(evt);
            }
        });

        jLabel18.setText("Situação");

        buttonFinalizar.setText("FINALIZAR PEDIDO");
        buttonFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFinalizarActionPerformed(evt);
            }
        });

        jLabel19.setText("CPF");

        inputCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputCpfinputTitulo1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(42, 42, 42)
                                .addComponent(inputServico)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputItem, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(14, 14, 14)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(12, 12, 12)
                                        .addComponent(inputDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(51, 51, 51)
                                        .addComponent(jLabel15)
                                        .addGap(12, 12, 12)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(inputPrevisaoEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel16)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(inputValor))
                                    .addComponent(inputObservacoes)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(buttonImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(buttonCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(buttonInicio))
                                        .addGap(39, 39, 39)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(buttonSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(buttonAnterior))
                                        .addGap(41, 41, 41)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(buttonEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(buttonProximo))
                                        .addGap(31, 31, 31)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(buttonExcluir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(buttonFinal, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addComponent(buttonFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel14))
                        .addGap(26, 26, 26)
                        .addComponent(inputId, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(inputCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(inputCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(inputSituacao, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                        .addGap(21, 21, 21))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(inputCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel18))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputServico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(inputItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(inputDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15)
                        .addComponent(inputPrevisaoEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16)
                        .addComponent(inputValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(inputObservacoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(buttonFinalizar, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonInicio)
                    .addComponent(buttonProximo)
                    .addComponent(buttonAnterior)
                    .addComponent(buttonFinal))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCadastrar)
                    .addComponent(buttonExcluir)
                    .addComponent(buttonSelecionar)
                    .addComponent(buttonEditar)
                    .addComponent(buttonImprimir))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        index = oc.getOrcamentos().size()-1;
        exibirDados();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if(index < oc.getOrcamentos().size()-1){
            posterior();
        }
        exibirDados();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if(index > 0){
            anterior();
        }
        exibirDados();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        index = 0;
        exibirDados();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void inputTitulo7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTitulo7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputTitulo7ActionPerformed

    private void inputTitulo6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTitulo6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputTitulo6ActionPerformed

    private void inputTitulo4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTitulo4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputTitulo4ActionPerformed

    private void inputTitulo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTitulo3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputTitulo3ActionPerformed

    private void inputTitulo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTitulo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputTitulo1ActionPerformed

    private void inputTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTituloActionPerformed

    }//GEN-LAST:event_inputTituloActionPerformed

    private void buttonCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCadastrarActionPerformed
        if(buttonCadastrar.getText().equals("Novo")){
            this.limparCampos();
            buttonCadastrar.setText("Salvar");
            this.ativarAll();
            this.desativarBotoesC();
        }else{
            this.iniciarValores();
            try {
                Date data = sdf.parse(dataInicio);
                Calendar c = Calendar.getInstance();
                c.setTime(data);
                oc.getOrcamento().setDataInicio(c);
                data = sdf.parse(previsaoEntrega);
                c = Calendar.getInstance();
                c.setTime(data);
                oc.getOrcamento().setPrevisaoEntrega(c);
                oc.getOrcamento().setCliente(cliente.toUpperCase());
                if(cpf.equals("   .   .   -  ")){
                    cpf ="NÃO INFORMADO";
                }
                oc.getOrcamento().setCpf(cpf);
                oc.getOrcamento().setServico(servico.toUpperCase());
                oc.getOrcamento().setItem(item.toUpperCase());
                oc.getOrcamento().setValor(valor);
                oc.getOrcamento().setObservacoes(observacoes.toUpperCase());
                oc.getOrcamento().setSituacao("ABERTO");
                oc.salvar();
                oc = new OrcamentoController();
                index = oc.getOrcamentos().size()-1;
                this.exibirDados();
                buttonCadastrar.setText("Novo");
            } catch (Exception ex) {
                
                JOptionPane.showMessageDialog(rootPane, "Campos Invalidos", "Aviso", JOptionPane.ERROR_MESSAGE, null);
            }
        }
    }//GEN-LAST:event_buttonCadastrarActionPerformed

    private void inputTitulo5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTitulo5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputTitulo5ActionPerformed

    private void buttonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExcluirActionPerformed
        this.valoresInput();
        try {
            oc.destroy(id);
            if(oc.primeiroPasso()==0){ 
                this.desativarAll();
                this.inputSituacao.setEnabled(false);
                this.desativarBotoesC();
                this.limparCampos();
            }else{
                oc = new OrcamentoController();
                index = oc.getOrcamentos().size()-1;
                this.exibirDados();
            }
            
        } catch (Exception ex) {
            Logger.getLogger(OrcamentoView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonExcluirActionPerformed

    private void buttonImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonImprimirActionPerformed
        oc.relatorioOrcamentosGeral(Integer.parseInt(inputId.getText()));
    }//GEN-LAST:event_buttonImprimirActionPerformed

    private void inputObservacoesinputTitulo5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputObservacoesinputTitulo5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputObservacoesinputTitulo5ActionPerformed

    private void buttonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditarActionPerformed
        
        if(buttonEditar.getText().equals("Salvar")){
            try {
                this.iniciarValores();
                Date data = sdf.parse(dataInicio);
                Calendar cInicio = Calendar.getInstance();
                cInicio.setTime(data);
                data = sdf.parse(previsaoEntrega);
                Calendar cEntrega = Calendar.getInstance();
                cEntrega.setTime(data);
                if(cpf.equals("   .   .   -  ")){
                    cpf ="NÃO INFORMADO";
                }
                oc.edit(Integer.parseInt(inputId.getText()),cliente.toUpperCase(),cpf,servico.toUpperCase(),item.toUpperCase(),cInicio,cEntrega,valor,observacoes.toUpperCase(),situacao);
                oc = new OrcamentoController();
                this.exibirDados();
                buttonEditar.setText("Editar");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(rootPane, "Campos Invalidos", "Aviso", JOptionPane.ERROR_MESSAGE, null);
            
            }
        }else{
            this.ativarAll();
            this.desativarBotoesE();
            buttonEditar.setText("Salvar");
        }
    }//GEN-LAST:event_buttonEditarActionPerformed

    private void buttonSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSelecionarActionPerformed
        if(buttonSelecionar.getText().equals("Buscar")){
        try {
            int i = 0;
            int id = Integer.parseInt(inputId.getText());
            Iterator iterator = oc.getOrcamentos().iterator();
            do{
                if(id == oc.getOrcamentos().get(i).getId()){
                    index=i;
                }
                iterator.next();
                if(i<oc.getOrcamentos().size()-1)
                    i++;
                
            }while (iterator.hasNext());
            
            limparCampos();
            buttonSelecionar.setEnabled(true);
            buttonCadastrar.setEnabled(true);
            buttonExcluir.setEnabled(true);
            buttonEditar.setEnabled(true);
            exibirDados();
            inputId.setEnabled(false);
            buttonSelecionar.setText("Selecionar");
        } catch (Exception ex) {
            
                JOptionPane.showMessageDialog(null, "ID inexistente", "Erro", 0);
        }
        }else{
            this.desativarAll();
            this.desativarBotoesS();
            inputId.setEnabled(true);
            inputId.setEditable(true);
            buttonSelecionar.setText("Buscar");
        }
    }//GEN-LAST:event_buttonSelecionarActionPerformed

    private void jLabel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MousePressed
        CalendarView cv = new CalendarView();
        this.getParent().add(cv);
        cv.setVisible(true);
        cv.setaCalendar3();
    }//GEN-LAST:event_jLabel3MousePressed

    private void jLabel5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MousePressed
        CalendarView cv = new CalendarView();
        this.getParent().add(cv);
        cv.setVisible(true);
        cv.setaCalendar4();
    }//GEN-LAST:event_jLabel5MousePressed

    private void jLabel3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseEntered
        jLabel3.setBorder(new LineBorder(new Color(230, 40, 70), 2, true));
    }//GEN-LAST:event_jLabel3MouseEntered

    private void jLabel3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseExited
        jLabel3.setBorder(new LineBorder(Color.BLACK, 2, true));
    }//GEN-LAST:event_jLabel3MouseExited

    private void jLabel5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseEntered
        jLabel5.setBorder(new LineBorder(new Color(230, 40, 70), 2, true));
    }//GEN-LAST:event_jLabel5MouseEntered

    private void jLabel5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseExited
        jLabel5.setBorder(new LineBorder(Color.BLACK, 2, true));
    }//GEN-LAST:event_jLabel5MouseExited

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        jLabel3.setBorder(new LineBorder(new Color(230, 40, 70), 3, true));
    }//GEN-LAST:event_jLabel3MouseClicked

    private void inputSituacaoinputTitulo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputSituacaoinputTitulo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputSituacaoinputTitulo1ActionPerformed

    private void buttonFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFinalizarActionPerformed
        if(buttonFinalizar.getText().equals("FINALIZAR PEDIDO")){
            try {
                Date data= new Date();
                Calendar c = Calendar.getInstance();
                c.setTime(data);
                oc.editSituacao(index,c,"FECHADO");
                oc = new OrcamentoController();
                this.desativarAll();
                this.exibirDados();
                buttonFinalizar.setText("REABRIR ORÇAMENTO");
            } catch (Exception ex) {
                Logger.getLogger(OrcamentoView.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }else{
            int resposta = JOptionPane.showConfirmDialog(null, "Deseja realmente reabrir o orçamento?", "Reabertura", JOptionPane.YES_NO_OPTION);
        
            if (resposta == JOptionPane.YES_OPTION) {
            
                this.ativarAll();

                try {
                Date data= new Date();
                Calendar c = Calendar.getInstance();
                c.setTime(data);
                oc.editSituacao(index,null,"ABERTO");
                } catch (Exception ex) {
                    Logger.getLogger(OrcamentoView.class.getName()).log(Level.SEVERE, null, ex);
                }
                oc = new OrcamentoController();
                this.desativarAll();
                this.exibirDados();
                buttonFinalizar.setText("FINALIZAR PEDIDO");
            }
        }
    }//GEN-LAST:event_buttonFinalizarActionPerformed

    private void inputCpfinputTitulo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputCpfinputTitulo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputCpfinputTitulo1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAnterior;
    private javax.swing.JButton buttonCadastrar;
    private javax.swing.JButton buttonEditar;
    private javax.swing.JButton buttonExcluir;
    private javax.swing.JButton buttonFinal;
    private javax.swing.JButton buttonFinalizar;
    private javax.swing.JButton buttonImprimir;
    private javax.swing.JButton buttonInicio;
    private javax.swing.JButton buttonProximo;
    private javax.swing.JButton buttonSelecionar;
    private javax.swing.JTextField inputCliente;
    private javax.swing.JTextField inputCpf;
    public static javax.swing.JTextField inputDataInicio;
    private javax.swing.JTextField inputId;
    private javax.swing.JTextField inputItem;
    private javax.swing.JTextField inputObservacoes;
    public static javax.swing.JTextField inputPrevisaoEntrega;
    private javax.swing.JTextField inputServico;
    private javax.swing.JTextField inputSituacao;
    private javax.swing.JTextField inputValor;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
    
    public int anterior(){
        return --index;
    }
    public int posterior(){
        return ++index;
    }
    
    public void valoresInput(){
        oc = new OrcamentoController();
        id = oc.getOrcamentos().get(index).getId();
        cliente = oc.getOrcamentos().get(index).getCliente();
        cpf = oc.getOrcamentos().get(index).getCpf();
        servico = oc.getOrcamentos().get(index).getServico();
        item = oc.getOrcamentos().get(index).getItem();
        dataInicio =""+sdf.format(oc.getOrcamentos().get(index).getDataInicio().getTime());
        previsaoEntrega =""+sdf.format(oc.getOrcamentos().get(index).getPrevisaoEntrega().getTime());
        valor =oc.getOrcamentos().get(index).getValor();
        observacoes = oc.getOrcamentos().get(index).getObservacoes();
        situacao = oc.getOrcamentos().get(index).getSituacao();
        
    }
    
    public void exibirDados(){
        this.valoresInput();
        this.ativarAll();
        inputId.setText(""+id);
        inputCliente.setText(cliente);
        if(!cpf.equals("NÃO INFORMADO")){
            inputCpf.setText(cpf);
        }else{
            inputCpf.setText("");
        }
        inputServico.setText(servico);
        inputItem.setText(item);
        inputDataInicio.setText(dataInicio);
        inputPrevisaoEntrega.setText(previsaoEntrega);
        inputValor.setText(""+valor);
        inputObservacoes.setText(observacoes);
        inputSituacao.setText(situacao);
        if(inputSituacao.getText().equals("ABERTO")){
            inputSituacao.setEnabled(true);
            inputSituacao.setEditable(false);
            inputSituacao.setForeground(new Color(40,30,210));
            buttonFinalizar.setText("FINALIZAR PEDIDO");
            buttonFinalizar.setBackground(new Color(40,30,210));
            buttonFinalizar.setForeground(Color.white);
        }else{
            this.desativarAll();
            this.ativarBottoensF();
            inputSituacao.setEnabled(true);
            inputSituacao.setEditable(false);
            inputSituacao.setForeground(new Color(210,30,30));
            buttonFinalizar.setText("REABRIR ORÇAMENTO");
            buttonFinalizar.setBackground(new Color(210,30,30));
            buttonFinalizar.setForeground(Color.white);
        }
    }
    

    public void limparCampos(){
        inputId.setEnabled(false);
        inputId.setText("");
        inputCliente.setText("");
        inputServico.setText("");
        inputItem.setText("");
        inputDataInicio.setText("");
        inputPrevisaoEntrega.setText("");
        inputCpf.setText("");
        inputValor.setText("");
        inputObservacoes.setText("");
    }
    
    public void desativarAll(){
        buttonInicio.setEnabled(false);
        buttonAnterior.setEnabled(false);
        buttonProximo.setEnabled(false);
        buttonFinal.setEnabled(false);
        buttonCadastrar.setEnabled(false);
        buttonEditar.setEnabled(false);
        buttonSelecionar.setEnabled(false);
        buttonExcluir.setEnabled(false);
        buttonImprimir.setEnabled(false);
        inputId.setEnabled(false);
        inputCliente.setEnabled(false);
        inputCpf.setEnabled(false);
        inputServico.setEnabled(false);
        inputItem.setEnabled(false);
        inputDataInicio.setEnabled(false);
        inputPrevisaoEntrega.setEnabled(false);
        inputValor.setEnabled(false);
        inputObservacoes.setEnabled(false);
        inputSituacao.setEnabled(false);
        buttonFinalizar.setEnabled(false);
        jLabel3.setVisible(false);
        jLabel5.setVisible(false);
    }
    
    public void ativarAll(){
        buttonInicio.setEnabled(true);
        buttonAnterior.setEnabled(true);
        buttonProximo.setEnabled(true);
        buttonFinal.setEnabled(true);
        buttonCadastrar.setEnabled(true);
        buttonEditar.setEnabled(true);
        buttonSelecionar.setEnabled(true);
        buttonExcluir.setEnabled(true);
        buttonImprimir.setEnabled(true);
        inputCliente.setEnabled(true);
        inputCpf.setEnabled(true);
        inputServico.setEnabled(true);
        inputItem.setEnabled(true);
        inputDataInicio.setEnabled(true);
        inputPrevisaoEntrega.setEnabled(true);
        inputValor.setEnabled(true);
        inputObservacoes.setEnabled(true);
        inputSituacao.setEditable(false);
        inputSituacao.setEnabled(true);
        buttonFinalizar.setEnabled(true);
        jLabel3.setVisible(true);
        jLabel5.setVisible(true);
    }
    
    public void desativarBotoesC(){
        buttonInicio.setEnabled(false);
        buttonAnterior.setEnabled(false);
        buttonProximo.setEnabled(false);
        buttonFinal.setEnabled(false);
        buttonCadastrar.setEnabled(true);
        buttonEditar.setEnabled(false);
        buttonSelecionar.setEnabled(false);
        buttonExcluir.setEnabled(false);
        buttonImprimir.setEnabled(false);
        buttonFinalizar.setEnabled(false);
        inputSituacao.setEnabled(false);
    }
    
    public void ativarBottoensF(){
        buttonInicio.setEnabled(true);
        buttonAnterior.setEnabled(true);
        buttonProximo.setEnabled(true);
        buttonFinal.setEnabled(true);
        buttonCadastrar.setEnabled(true);
        buttonEditar.setEnabled(false);
        buttonSelecionar.setEnabled(true);
        buttonExcluir.setEnabled(false);
        buttonImprimir.setEnabled(true);
        buttonFinalizar.setEnabled(true);
        inputSituacao.setEnabled(true);
    }
    
    public void desativarBotoesE(){
        buttonInicio.setEnabled(false);
        buttonAnterior.setEnabled(false);
        buttonProximo.setEnabled(false);
        buttonFinal.setEnabled(false);
        buttonCadastrar.setEnabled(false);
        buttonEditar.setEnabled(true);
        buttonSelecionar.setEnabled(false);
        buttonExcluir.setEnabled(false);
        buttonImprimir.setEnabled(false);
        buttonFinalizar.setEnabled(false);
        inputSituacao.setEnabled(false);
    }
    
    public void desativarBotoesS(){
        buttonInicio.setEnabled(false);
        buttonAnterior.setEnabled(false);
        buttonProximo.setEnabled(false);
        buttonFinal.setEnabled(false);
        buttonCadastrar.setEnabled(false);
        buttonEditar.setEnabled(false);
        buttonSelecionar.setEnabled(true);
        buttonExcluir.setEnabled(false);
        buttonImprimir.setEnabled(false);
        buttonFinalizar.setEnabled(false);
        inputSituacao.setEnabled(false);
        
        jLabel3.setVisible(false);
        jLabel5.setVisible(false);
    }

}
